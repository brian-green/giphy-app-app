{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgreen/Code/SuperHi/React/week2/giphy-app-app/src/App.js\";\nimport React, { Component } from 'react';\n\nconst Header = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"header grid\",\n  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"title\",\n    children: \"Jiffy Lube\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Header;\n\nconst handleChange = event => {\n  //create react app can write methods as arrow functions\n  //meaning no constructor and bind\n  const {\n    value\n  } = event.target; // same as…\n  // const value = event.target.value\n  // value allows us to see the value of the typing, \n  // target is element, value is the input\n  // event.key and event.keyCode are empty with onChange\n\n  console.log(value);\n\n  if (value.length > 2) {\n    console.log('This is a valid search term.');\n  }\n};\n\nconst handleKeyPress = event => {\n  const {\n    value\n  } = event.target; // value gives us the previous updated value\n  // which is why we need to use onChange\n\n  if (event.key === 'Enter') {\n    alert('you pressed enter!');\n  }\n};\n\nconst Search = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"search grid\",\n  children: /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"input grid-item\",\n    placeholder: \"Type something\" // here we are running functions every time it changes\n    // react convention, events are right on the component\n    //since \n    ,\n    onChange: handleChange,\n    onKeyPress: handleKeyPress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this);\n\n_c2 = Search;\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"sources":["/Users/bgreen/Code/SuperHi/React/week2/giphy-app-app/src/App.js"],"names":["React","Component","Header","handleChange","event","value","target","console","log","length","handleKeyPress","key","alert","Search","App","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,MAAM,GAAG,mBACb;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA,yBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMA,M;;AAMN,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACA;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUD,KAAK,CAACE,MAAtB,CAH4B,CAI5B;AACA;AAEA;AACA;AAEA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,MAAIA,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AACF,CAfD;;AAiBA,MAAME,cAAc,GAAGN,KAAK,IAAI;AAC9B,QAAM;AAACC,IAAAA;AAAD,MAAUD,KAAK,CAACE,MAAtB,CAD8B,CAE9B;AACA;;AACA,MAAIF,KAAK,CAACO,GAAN,KAAc,OAAlB,EAA2B;AACzBC,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;AACF,CAPD;;AASA,MAAMC,MAAM,GAAG,mBACb;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA,yBACE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,WAAW,EAAC,gBAFd,CAGE;AACA;AAEA;AANF;AAOE,IAAA,QAAQ,EAAEV,YAPZ;AAQE,IAAA,UAAU,EAAEO;AARd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMG,M;;AAeN,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAC1Bc,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AARyB;;AAW5B,eAAeD,GAAf","sourcesContent":["import React, {Component} from 'react';\n\nconst Header = () => (\n  <div className=\"header grid\">\n      <h1 className=\"title\">Jiffy Lube</h1>\n  </div>\n)\n\nconst handleChange = event => {\n  //create react app can write methods as arrow functions\n  //meaning no constructor and bind\n  const {value} = event.target\n  // same as…\n  // const value = event.target.value\n  \n  // value allows us to see the value of the typing, \n  // target is element, value is the input\n\n  // event.key and event.keyCode are empty with onChange\n  console.log(value);\n  if (value.length > 2) {\n    console.log('This is a valid search term.')\n  }\n}\n\nconst handleKeyPress = event => {\n  const {value} = event.target\n  // value gives us the previous updated value\n  // which is why we need to use onChange\n  if (event.key === 'Enter') {\n    alert('you pressed enter!')\n  }\n}\n\nconst Search = () => (\n  <div className=\"search grid\">\n    <input\n      className=\"input grid-item\"\n      placeholder=\"Type something\"\n      // here we are running functions every time it changes\n      // react convention, events are right on the component\n\n      //since \n      onChange={handleChange}\n      onKeyPress={handleKeyPress}\n    />\n  </div>\n)\n\nclass App extends Component {\n  render () {\n    return (\n      <div className=\"page\">\n        <Header/>\n        <Search/>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}